'''
У будинку, що складається з 30 квартир, переселити мешканців так, щоб мешканці першої квартири переїхали в тридцяту,
з тридцятого - в першу, з другої - в 29 і т.д., знайдіть кількість квартир, в яких проживає більше 5 осіб.
Bиконала Новіцька В. І. 122Б
'''
import random
while True:  # програма знаходиться в циклі, який буде виконуватись за умови, що користувач хоче виконати її знову
    print()  # відступ для більшої читабельності виведених користувачеві даних
    A = []  # масив з 30 квартир та к-ті людей, що живуть в кожній
    for i in range(30):
        a = random.randint(1, 7)  # заповнимо масив рандомними числами (к-ть людей в сім'ї)
        A.append(a)
    print(f'Number of people who live in appartments 1-30: \n{A}')

    def switch(A):
        '''
        створимо функцію, яка буде змінювати місцями мешканців: першого і останнього, другого і передостаннього, і т.д.
        '''
        A_mid = len(A) // 2  # центральний елемент масиву
        i = 0  # лічильник, який буде зібльшуватись від першого елемента до центрального
        j = len(A) - 1  # лічильник, який буде зібльшуватись від останнього елемента до центрального
        while i < A_mid and j > A_mid:
            A[i], A[j] = A[j], A[i]  # протилежні відносно центрального елементи міняються місцями
            i += 1  # крок +1 до центрального елемента
            j -= 1  # крок -1 до центрального елемента
        A[A_mid], A[A_mid - 1] = A[A_mid - 1], A[A_mid]
        # оскільки к-ть елементів парна, то 2 центральні елементи також потрібно поміняти місцями
        return A
    A = switch(A)  # всі мешканці переселені
    print(f'Number of people who live in appartments 1-30 (switched): \n{A}')

    num = 0  # якщо знаходиться квартира з сім'єю більшою за 5 людей, у лічильник додається +1
    for i in A:
        if i > 5:
            num += 1

    print(f'\nNumber of appartments where live families of 5 or more members: {num}')

    answer = input('\nDo you want to try again? Yes-1, No-2:')
    if answer == '1':
        continue  # програма виконається знову
    else:
        break  # програма завершиться
