'''
В масиві X (1: n) кожен елемент рівний 0, 1 або 5. Переставити елементи масиву так,
щоб спочатку розташовувалися всі нулі, потім все одиниці, а потім всі п'ятірки.
Додаткового масиву не заводити.
Bиконала Новіцька В. І. 122Б
'''
import random
while True:  # програма знаходиться в циклі, який буде виконуватись за умови, що користувач хоче виконати її знову

    while True:
        try:
            print()  # відступ для більшої читабельності виведених користувачеві даних
            n = int(input('Please input number of elements in array: '))
            if n < 0:
                print('\nInputed number must be more than 0!')
                continue
        except ValueError or TypeError:  # перевірка на відповідність введеного числа умові
            print('\nPlease input an integer!')
            continue
        break
    
    A = [0, 1, 5]  # елементи, які будуть рандомно розташовуватись в масиві Х
    
    X = []
    for i in range(n):
        X.append(random.choice([0, 1, 5]))
    print(f'Your array: \n{X}')
    
    def ascend(X):  # Сортування бульбашкою за зростанням
        for i in range(len(X) - 1, 0, -1):
            for j in range(i):
                if X[j] > X[j + 1]:
                    X[j], X[j + 1] = X[j + 1], X[j]
        # за допомогою циклів відбувається проходження по всім елементам і порівняння кожного елемента з наступним.
        # якщо він більший за наступний, то вони міняються місцями.
        # вкінці першої ітерації першого циклу for найбільший елемент вже стоїть на останній позиції,
        # тому наступна ітерація буде здійснюватись до цього елементу, і так доки всі елементи не будуть відсортовані у порядку зростання
        return X

    ascend(X)
    print(f'Your array sorted: {X}')
        
    answer = input('\nDo you want to try again? Yes-1, No-2:')
    if answer == '1':
        continue  # програма виконається знову
    else:
        break  # програма завершиться